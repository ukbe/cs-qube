apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
type: Opaque
data:
  access_key_id: YWJj
  secret_access_key: YWJj
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cs-qube
data:
  S3_BUCKET: cs-qube-files
  HYPO_APP_LOAD_DURATION: "15"
  DEFAULT_HICCUP_DURATION: "5"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
      listen 80;
      server_name localhost;
      
      location /static/ {
        alias /data/static/;
      }
      
      location / {
        proxy_pass http://localhost:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
      }
    }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: static-files
  labels:
    app: cs-qube
spec:
  storageClassName: local-storage
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/static
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-files
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: static-files
---
apiVersion: v1
kind: Service
metadata:
  name: cs-qube
  labels:
    app: cs-qube
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: cs-qube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cs-qube
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cs-qube
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cs-qube
    spec:
      volumes:
        - name: static-files
          persistentVolumeClaim:
            claimName: static-files
        - name: nginx-config
          configMap:
            name: nginx-config
      containers:
        - name: cs-qube
          image: ukbe/cs-qube:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 30m
              memory: 400Mi
            limits:
              cpu: 300m
              memory: 4000Mi
          volumeMounts:
            - name: static-files
              mountPath: /app/static
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: cs-qube
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            periodSeconds: 1
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /health
              port: 5000
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 12

        - image: nginx
          imagePullPolicy: Always
          name: nginx
          resources:
            requests:
              cpu: 30m
              memory: 400Mi
            limits:
              cpu: 300m
              memory: 4000Mi
          volumeMounts:
            - name: static-files
              mountPath: /data/static
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            periodSeconds: 2
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /
              port: 80
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 12

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-static-files
spec:
  ttlSecondsAfterFinished: 100
  activeDeadlineSeconds: 60
  template:
    spec:
      volumes:
        - name: static-files
          persistentVolumeClaim:
            claimName: static-files
      containers:
        - name: cs-qube
          image: ukbe/cs-qube:latest
          command: ["sh", "-c", "cp -r ./static/* /data/static/"]
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data/static
              name: static-files
          resources:
            requests:
              cpu: 30m
              memory: 400Mi
            limits:
              cpu: 300m
              memory: 4000Mi

      restartPolicy: OnFailure
  backoffLimit: 3
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cs-qube
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: localtest.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cs-qube
                port:
                  number: 80

